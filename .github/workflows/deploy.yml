name: Deploy to VM

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set Docker image tag to commit SHA
      - name: Set Docker Image Tag
        id: vars
        run: echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Login to Docker Hub
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Build & push client image
      - name: Build & Push Client Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/oasis-client:${{ env.TAG }} ./client
          docker push ${{ secrets.DOCKER_USERNAME }}/oasis-client:${{ env.TAG }}

      # Build & push server image
      - name: Build & Push Server Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/oasis-server:${{ env.TAG }} ./server
          docker push ${{ secrets.DOCKER_USERNAME }}/oasis-server:${{ env.TAG }}

      # Copy files to remote VM
      - name: Copy Files to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: 22
          source: "."
          target: "~/oasis-temp"

      # SSH into VM and deploy
      - name: Deploy on VM
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: 22
          script: |
            cd ~/oasis-temp

            # Export environment variables
            export DB_USERNAME=${{ secrets.DB_USERNAME }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export DB_URL=${{ secrets.DB_URL }}
            export FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            export TAG=${{ env.TAG }}
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}

            # Docker login
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

            # Pull & restart containers
            docker compose pull
            docker compose down
            docker compose up -d --remove-orphans

            # Cleanup
            rm -f docker-compose.yml
